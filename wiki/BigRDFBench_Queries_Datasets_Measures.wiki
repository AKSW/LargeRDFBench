#summary How to calculate various measures of benchmark datasets and queries?

For all of the given dataset and query features, you first need to download the Java [http://goo.gl/8ql1UA BigRDFBench_Util.jar] and include into the java project. The complete source code for this tool can also be checkout from SVN link http://bigrdfbench.googlecode.com/svn/trunk/. 

== Dataset Structuredness ==

Duan et al. " Apples and Oranges: A Comparison of RDF Benchmarks and Real RDF Datasets" introduced the notion of structuredness or choerence, which indicates whether the instances in a dataset have only a few or all attributes of their types set. They show that artificial datasets are typically highly structured and “real” datasets are less structured.  For a given dataset,the structuredness value ranges [0,1] with 0 means less structured and 1 means high structured dataset. A federated SPARQL query benchmark should comprise datasets of varying structuredness values. You can calculate the structuredness value for a dataset (hosted as SPARQL endpoint) as follow. 

{{{
String endpointUrl = "http://localhost:8894/sparql";   //endpoint URL
String namedGraph = "http://aksw.org/benchmark";   // named Graph
double coherence = StructurednessCalculator.getStructurednessValue(endpointUrl, namedGraph);
System.out.println("\nOverall Structuredness or Coherence: " + coherence);

}}}

A sample output for Affymetrix dataset is given below: 
{{{
Total rdf:types: 3

1 : Type: http://rdfs.org/ns/void#Dataset
Coverage : 0.6
Weighted Coverage : 8.442659916291027E-6

2 : Type: http://bio2rdf.org/affymetrix_vocabulary:Probeset
Coverage : 0.5066791705833019
Weighted Coverage : 0.9999824111251744

3 : Type: http://bio2rdf.org/dataset_vocabulary:Endpoint
Coverage : 1.0
Weighted Coverage : 9.146214909315279E-6

Overall Structuredness or Coherence: 0.506684470477653
}}}

The details about coverage and weighted coverage can be found in Duan et al. paper. The complete structuredness and type coverage results for all of the BigRDFBench datasets is given [https://drive.google.com/file/d/0BzemFAUFXpqOMXRLaHdueWlOUlE/view?usp=sharing here]

== Details ==
Please first read BigRDFBench paper to understand these query features. 

Put all of your benchmark queries in a folder (one query per file). Query Features for all of the queries can be printed as follow. 

{{{
String inputDir= "../BigRDFBench-Utilities/queries/";
File folder = new File(inputDir);
File[] listOfFiles = folder.listFiles();
long count = 1; 
for (File qryFile : listOfFiles)
  {	
    BufferedReader br = new BufferedReader(new FileReader(inputDir+qryFile.getName()));
    String line;
    String queryStr="";
	while ((line = br.readLine()) != null) 
                {
		   queryStr= queryStr+" "+line;
		}
         br.close();
    System.out.println("--------\n"+count+ ": "+qryFile.getName()+" Query: " + queryStr);
    QueryStatistics.printQueryStats(queryStr,qryFile.getName());
    count++;
   }
}}}

A sample output is given below
{{{
--------------------------------------------------------------
1: B1 Query:  PREFIX tcga: <http://tcga.deri.ie/schema/>  SELECT  ?expValue  WHERE {{?s tcga:bcr_patient_barcode <http://tcga.deri.ie/TCGA-37-3789>.      <http://tcga.deri.ie/TCGA-37-3789>	tcga:result	?results.     ?results  tcga:RPKM ?expValue.   } UNION   {    ?uri	tcga:bcr_patient_barcode	<http://tcga.deri.ie/TCGA-37-3789>.      <http://tcga.deri.ie/TCGA-37-3789>	tcga:result	?geneResults.     ?geneResults  tcga:scaled_estimate ?expValue.   }}
Basic Graph Patterns (BGPs): 2
Triple Patterns: 6
Total Vertices:14 ==> [http://tcga.deri.ie/schema/bcr_patient_barcode, uri, http://tcga.deri.ie/TCGA-37-3789, expValue, http://tcga.deri.ie/schema/RPKM, geneResults, http://tcga.deri.ie/TCGA-37-3789, results, s, http://tcga.deri.ie/schema/result, expValue, http://tcga.deri.ie/schema/result, http://tcga.deri.ie/schema/scaled_estimate, http://tcga.deri.ie/schema/bcr_patient_barcode]
Join Vertices: 4 ==> [http://tcga.deri.ie/TCGA-37-3789, http://tcga.deri.ie/TCGA-37-3789, results, geneResults]
Join Vertices to Total Vertices ratio: 0.2857142857142857
     http://tcga.deri.ie/TCGA-37-3789 Join Vertex Degree: 2, Join Vertex Type: path
     http://tcga.deri.ie/TCGA-37-3789 Join Vertex Degree: 2, Join Vertex Type: path
     results Join Vertex Degree: 2, Join Vertex Type: path
     geneResults Join Vertex Degree: 2, Join Vertex Type: path
Mean Join Vertices Degree: 2.0
--------------------------------------------------------------
2: B2 Query:  PREFIX tcga: <http://tcga.deri.ie/schema/>  SELECT   DISTINCT ?patient ?tumorType ?exonValue WHERE { ?s tcga:bcr_patient_barcode ?patient. ?patient tcga:disease_acronym <http://tcga.deri.ie/lusc>. ?patient tcga:tumor_weight ?weight. ?patient tcga:tumor_type ?tumorType.  ?patient tcga:result ?results. ?results tcga:RPKM  ?exonValue. FILTER(?weight <= 55) }
Basic Graph Patterns (BGPs): 1
Triple Patterns: 6
Total Vertices:13 ==> [http://tcga.deri.ie/schema/tumor_type, http://tcga.deri.ie/schema/bcr_patient_barcode, http://tcga.deri.ie/schema/RPKM, s, tumorType, patient, http://tcga.deri.ie/schema/tumor_weight, results, http://tcga.deri.ie/schema/result, exonValue, http://tcga.deri.ie/schema/disease_acronym, http://tcga.deri.ie/lusc, weight]
Join Vertices: 2 ==> [results, patient]
Join Vertices to Total Vertices ratio: 0.15384615384615385
     results Join Vertex Degree: 2, Join Vertex Type: path
     patient Join Vertex Degree: 5, Join Vertex Type: Hybrid
Mean Join Vertices Degree: 3.5
--------------------------------------------------------------
}}}

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages