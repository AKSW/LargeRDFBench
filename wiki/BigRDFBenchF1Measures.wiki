This page provides details about how one can use the BigRDFBench java tool(BigRDFBench-F1_Measure.jar) to calculate Precision, Recall, and F1 scores for a qiven SPARQL query. The main aim of this tool is to measure the completeness and correctness of results retrieved by the underlying federation engine for a given SPARQL query. First, we explain how this tool can be used with BigRDFBench, followed by the details how one can use it for any other benchmark. 

 === Using with BigRDFBench ===

 * Download the Java [https://drive.google.com/file/d/0BzemFAUFXpqOSmtQRy04OHdtelU/edit?usp=sharing BigRDFBench-F1_Measure.jar] and include into the underlying federation engine references libraries. The complete source code for this tool can also be checkout from SVN link http://bigrdfbench.googlecode.com/svn/trunk/. 
 * Download the BigRDFBench actual [https://drive.google.com/file/d/0BzemFAUFXpqOMWlMRFNyT3lzSTQ/edit?usp=sharing results] (NTripples) file and store it into a directory.
 * Load the above results.nt file into in-memory sesame index by calling the  ResultsLoader.loadResults(ResultsFileLocation) function. This is one time process and you dont  need to load again and again. 
 * You can compute the Precision, Recall, and F1 score by calling the function StatsGenerator.getFscores(BigRDFBenchQueryNo, QueryResultSetIterator). 
 * You can retrieve the results missed by federation engine by calling the function StatsGenerator.getMissingResults(BigRDFBenchQueryNo, QueryResultSetIterator

A sample code (FedX based) is given below. 

String S2 = "SELECT ?party ?page  WHERE {  <http://dbpedia.org/resource/Barack_Obama> 
<http://dbpedia.org/ontology/party> ?party .
?x <http://data.nytimes.com/elements/topicPage> ?page .
?x <http://www.w3.org/2002/07/owl#sameAs> <http://dbpedia.org/resource/Barack_Obama> .}";
			

String results = "D:/BigRDFBench/completeness_correctness/results.nt";

ResultsLoader.loadResults(results);

TupleQuery query = repo.getConnection().prepareTupleQuery(QueryLanguage.SPARQL, S2); 

TupleQueryResult res = query.evaluate();

System.out.println(StatsGenerator.getFscores("S2", res));

A sample output is given below. 

Precision: 1.0, Recall: 1.0, F1: 1.0

=== Using with any other Benchamrk===
In order to use with other bechmarks, the following extra steps are required: